# ===========================================================================================
# Tor Simulator Handler
# ===========================================================================================
# Purpose: Simulates Tor network delivery by converting outgoing events to incoming events
#          for recipient peers. This handler acts as a simplified onion routing network,
#          delivering messages from sender to recipient without actual encryption layers.
#
# Tor Concepts Simulated:
# - Message routing through network (simplified)
# - Delivery to recipient's inbox
# - Network-origin metadata tagging
# ===========================================================================================

type: tor_simulator

# ===========================================================================================
# COMMANDS
# ===========================================================================================
commands:
  # -----------------------------------------------------------------------------------------
  # Deliver Command - Routes Messages Through Simulated Network
  # -----------------------------------------------------------------------------------------
  deliver:
    description: Converts all outgoing events to recipient peer to incoming events for that recipient
    func: deliver.execute
    
    # =======================================================================================
    # TEST SCENARIOS
    # =======================================================================================
    tests:
      # -------------------------------------------------------------------------------------
      # Test: Multiple Message Types Delivery
      # -------------------------------------------------------------------------------------
      - given:
          db:
            state:
              # Outgoing queue contains different event types
              outgoing:
                # Message event from peer2 to peer1
                - recipient: peer1
                  data:
                    type: message
                    text: Hello
                    sender: peer2
                    
                # Sync peers request from peer1 to peer2
                - recipient: peer2
                  data:
                    type: sync_peers
                    sender: peer1
                    
          params: {}
          
        then:
          return:
            return: Delivered 2 messages  # Success message
            
          db:
            state:
              outgoing: []  # Queue is cleared after delivery
              
            # Messages are delivered to incoming queue with proper metadata
            incoming:
              # Delivered message with network origin metadata
              - envelope: true  # Indicates this is a properly formatted envelope
                data:
                  type: message
                  text: Hello
                  sender: peer2
                metadata:
                  origin: network         # Marked as coming from network (not local)
                  receivedAt: "*"        # Timestamp will be set by system
                  selfGenerated: false   # Not generated by recipient
                  
              # Delivered sync request with same metadata pattern
              - envelope: true
                data:
                  type: sync_peers
                  sender: peer1
                metadata:
                  origin: network
                  receivedAt: "*"
                  selfGenerated: false

# ===========================================================================================
# BACKGROUND JOB CONFIGURATION
# ===========================================================================================
# This handler runs as a background job during tick cycles
job: deliver